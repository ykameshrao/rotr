syntax = "proto3";

option java_package = "rotr";

package rotr;

import "google/protobuf/wrappers.proto";

// https://grpc.io/docs/tutorials/basic/c.html
// protoc -I=. --cpp_out=./generated/ ./rotr.proto
// protoc -I=. --grpc_out=./generated --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` rotr.proto

// status codes

enum StatusCode {
    None = 0;
    Failure = 1;
    Success = 2;
}

// common entities

message Status {
    StatusCode statusCode = 1;
    string message = 2;
}

message NodeInfo {
    string ipV4Address = 1;
    string hostName = 2;
    bool isLeader = 3;
    string clusterId = 4;
    string clusterName = 5;
    uint32 rotrPort = 6;
    uint32 replicationPort = 7;
    uint32 electionPort = 8;
}

message ClusterInfo {
    string clusterName = 1;
    string clusterId = 2;
    repeated NodeInfo nodes = 3;
    NodeInfo leader = 4;
}

message NodeInfoList {
    repeated NodeInfo nodes = 1;
}

message Null {
}

// request
message AppendEntriesRequest {
    uint32 term = 1;
    NodeInfo leaderNode = 2;
    uint32 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    uint32 leaderCommitIndex = 5;
    map<string, string> entries = 6;
}

message RequestVoteRequest {
    uint32 term = 1;
    NodeInfo candidateNode = 2;
    uint32 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RotrGetRequest {
    string key = 1;
    uint32 version = 2;
}

message RotrPutRequest {
    string key = 1;
    string value = 2;
}

// responses
message AppendEntriesResponse {
    uint32 currentTerm = 1;
    bool success = 2;
}

message RequestVoteResponse {
    uint32 term = 1;
    bool voteGranted = 2;
}

message RotrGetResponse {
    string key = 1;
    uint32 version = 2;
    string value = 3;
}

message RotrPutResponse {
    string key = 1;
    uint32 version = 2;
}

// services
service ReplicationService {
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {};
}

service ElectionService {
    rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse) {};
}

service RotrService {
    rpc Get (RotrGetRequest) returns (RotrGetResponse) {}
    rpc Put (RotrPutRequest) returns (RotrPutResponse) {}
    rpc DiscoverCluster (Null) returns (ClusterInfo) {}
}